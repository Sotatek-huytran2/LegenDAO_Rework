{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InitMsg",
  "type": "object",
  "required": [
    "inflation_schedule",
    "platform",
    "prng_seed",
    "token",
    "viewing_key"
  ],
  "properties": {
    "inflation_schedule": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScheduleUnit"
      }
    },
    "max_multiplier": {
      "anyOf": [
        {
          "$ref": "#/definitions/Uint128"
        },
        {
          "type": "null"
        }
      ]
    },
    "multiplier_contracts": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/HumanAddr"
      }
    },
    "platform": {
      "$ref": "#/definitions/Contract"
    },
    "prng_seed": {
      "$ref": "#/definitions/Binary"
    },
    "subscribers": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "$ref": "#/definitions/Contract"
      }
    },
    "token": {
      "$ref": "#/definitions/Contract"
    },
    "viewing_key": {
      "type": "string"
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Contract": {
      "type": "object",
      "required": [
        "address",
        "hash"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/HumanAddr"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "ScheduleUnit": {
      "type": "object",
      "required": [
        "end_block",
        "reward_per_block"
      ],
      "properties": {
        "end_block": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "reward_per_block": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    "Uint128": {
      "type": "string"
    }
  }
}
