{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryAnswer",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "$ref": "#/definitions/Config"
        }
      }
    },
    {
      "type": "object",
      "required": [
        "balance"
      ],
      "properties": {
        "balance": {
          "$ref": "#/definitions/ResponseBalances"
        }
      }
    },
    {
      "type": "object",
      "required": [
        "num_of_pending_claims"
      ],
      "properties": {
        "num_of_pending_claims": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    {
      "type": "object",
      "required": [
        "total_balances"
      ],
      "properties": {
        "total_balances": {
          "$ref": "#/definitions/ResponseTotalBalances"
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Config": {
      "type": "object",
      "required": [
        "admin",
        "distribute_address",
        "legen_dao_nft",
        "native_token_denom",
        "self_contract_addr",
        "signer_address",
        "token",
        "ts_now",
        "unbonding_period"
      ],
      "properties": {
        "admin": {
          "$ref": "#/definitions/HumanAddr"
        },
        "distribute_address": {
          "$ref": "#/definitions/HumanAddr"
        },
        "legen_dao_nft": {
          "$ref": "#/definitions/Contract"
        },
        "native_token_denom": {
          "type": "string"
        },
        "self_contract_addr": {
          "$ref": "#/definitions/HumanAddr"
        },
        "signer_address": {
          "$ref": "#/definitions/Binary"
        },
        "token": {
          "$ref": "#/definitions/Contract"
        },
        "ts_now": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "unbonding_period": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "Contract": {
      "type": "object",
      "required": [
        "address",
        "hash"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/HumanAddr"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "ResponseBalances": {
      "type": "object",
      "required": [
        "pending_redeem",
        "staked"
      ],
      "properties": {
        "pending_redeem": {
          "description": "Withdraw requests",
          "allOf": [
            {
              "$ref": "#/definitions/ResponseRedeemInfo"
            }
          ]
        },
        "staked": {
          "description": "Staked amount, not including unbonding (or claimable) funds",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        }
      }
    },
    "ResponseRedeemInfo": {
      "type": "object",
      "required": [
        "claimable",
        "unbondings"
      ],
      "properties": {
        "claimable": {
          "description": "Claimable withdraws (i.e. finished unbonding period)",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "unbondings": {
          "description": "Unbonding withdraws",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseUnbondingRecord"
          }
        }
      }
    },
    "ResponseTotalBalances": {
      "type": "object",
      "required": [
        "staked",
        "unbonding"
      ],
      "properties": {
        "staked": {
          "$ref": "#/definitions/Uint128"
        },
        "unbonding": {
          "$ref": "#/definitions/Uint128"
        }
      }
    },
    "ResponseUnbondingRecord": {
      "type": "object",
      "required": [
        "amount",
        "end_ts"
      ],
      "properties": {
        "amount": {
          "description": "Amount unbonding",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "end_ts": {
          "description": "Unbonding period ending timestamp (in seconds)",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "Uint128": {
      "type": "string"
    }
  }
}
